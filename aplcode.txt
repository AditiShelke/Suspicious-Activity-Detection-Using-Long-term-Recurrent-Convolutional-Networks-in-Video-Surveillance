****1. Write a program for creating the new activity for the button click.****
<Button
    android:id="@+id/button_launch_second"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:text="Launch Second Activity" />


public class MainActivity extends AppCompatActivity {

    Button launchSecondButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        launchSecondButton = findViewById(R.id.button_launch_second);

        launchSecondButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Create an implicit intent to launch SecondActivity
                Intent intent = new Intent(MainActivity.this, SecondActivity.class);
                startActivity(intent);
            }
        });
    }
}
***2. <LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">  </LinearLayout>
****3. <RelativeLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    </RelativeLayout>
****4. <FrameLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    </FrameLayout>
 
ChatGPT
To create a

<TableRow>
    <TextView
        android:text="Column 1"
        android:layout_width="0dp"  android:layout_height="wrap_content" />
    <TextView
        android:text="Column 2"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1" />  </TableRow>
ChatGPT
*******implicit intent******
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity">

	<EditText
		android:id="@+id/editText"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toTopOf="parent" />

	<Button
		android:id="@+id/btn"
		android:text="Search"
		android:onClick="search"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toBottomOf="@+id/editText" />


</androidx.constraintlayout.widget.ConstraintLayout>
***java ***
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
	
		EditText editText;
		Button button;
	
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	
		button = findViewById(R.id.btn);
		editText = (EditText) findViewById(R.id.editText);

		button.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View view) {
				String url=editText.getText().toString();
				Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
				startActivity(intent);
			}
		});
	}
}
ChatGPT
*****explicit intent*****
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity">

	<TextView
		android:id="@+id/editText"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:text="Welcome to GFG Home Screen"
		android:textAlignment="center"
		android:textSize="28sp"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintHorizontal_bias="0.0"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toTopOf="parent" />

	<Button
		android:id="@+id/btn1"
		android:text="Go to News Screen"
		android:onClick="newsScreen"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toBottomOf="@+id/editText" />
</androidx.constraintlayout.widget.ConstraintLayout>
**java **
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;

public class MainActivity extends AppCompatActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}

	public void newsScreen(View view) {
		Intent i = new Intent(getApplicationContext(), MainActivity2.class);
		startActivity(i);
	}
}
**mainac2***expli**
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity2">

	<TextView
		android:id="@+id/editText"
		android:layout_width="match_parent"
		android:layout_height="wrap_content"
		android:text="Welcome to GFG News Screen"
		android:textAlignment="center"
		android:textSize="28sp"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintHorizontal_bias="0.0"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toTopOf="parent" />

	<Button
		android:id="@+id/btn2"
		android:text="Go to Home Screen"
		android:onClick="homeScreen"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toBottomOf="@+id/editText" />
</androidx.constraintlayout.widget.ConstraintLayout>
**java **
import androidx.appcompat.app.AppCompatActivity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;

public class MainActivity2 extends AppCompatActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main2);
	}

	public void homeScreen(View view) {
		Intent i = new Intent(getApplicationContext(), MainActivity.class);
		startActivity(i);
	}
}
ChatGPT
***********Write a program for designing the registration form GUI using Buttons, Text Fields,
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:tools="http://schemas.android.com/tools"
              android:layout_width="match_parent"
              android:layout_height="match_parent"
              android:orientation="vertical"
              android:padding="16dp">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Registration Form"
        android:textSize="24sp"
        android:textStyle="bold"
        android:layout_marginBottom="16dp" />

    <EditText
        android:id="@+id/et_username"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Username"
        android:inputType="text" />

    <EditText
        android:id="@+id/et_email"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Email"
        android:inputType="textEmailAddress" />

    <EditText
        android:id="@+id/et_password"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Password"
        android:inputType="textPassword" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Gender:"
        android:layout_marginTop="16dp" />

    <RadioGroup
        android:id="@+id/rg_gender"
        android:layout_width="match_parent"
        android:layout_height="wrap_content">

        <RadioButton
            android:id="@+id/rb_male"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Male" />

        <RadioButton
            android:id="@+id/rb_female"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Female" />

        <RadioButton
            android:id="@+id/rb_other"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="Other" />
    </RadioGroup>

    <CheckBox
        android:id="@+id/cb_terms"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="I agree to the terms and conditions" />

    <ToggleButton
        android:id="@+id/tb_newsletter"
        android:layout_width="wrap_content"
        android.layout_height="wrap_content"
        android:text="Subscribe to newsletter" />

    <Button
        android:id="@+id/btn_register"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Register" />

</LinearLayout>

public class MainActivity extends AppCompatActivity {

    private EditText usernameEditText;
    private EditText emailEditText;
    private EditText passwordEditText;
    private RadioGroup genderRadioGroup;
    private CheckBox termsCheckBox;
    private ToggleButton newsletterToggleButton;
    private Button registerButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Find views by ID
        usernameEditText = findViewById(R.id.et_username);
        emailEditText = findViewById(R.id.et_email);
        passwordEditText = findViewById(R.id.et_password);
        genderRadioGroup = findViewById(R.id.rg_gender);
        termsCheckBox = findViewById(R.id.cb_terms);
        newsletterToggleButton = findViewById(R.id.tb_newsletter);
        registerButton = findViewById(R.id.btn_register);

        // Set click listeners for buttons and handle other events here (optional)
    }
}

ChatGPT
<Spinner
    android:id="@+id/spinner_options"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content" />
List<String> optionsList = Arrays.asList("Option 1", "Option 2", "Option 3");
Spinner spinner = findViewById(R.id.spinner_options);
ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, optionsList);
adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
spinner.setAdapter(adapter);
public class MainActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {

    // ... other code

    private Spinner spinner;
    private TextView selectedOptionTextView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        spinner = findViewById(R.id.spinner_options);
        selectedOptionTextView = findViewById(R.id.selected_option_text_view);  // Optional TextView for display

        spinner.setOnItemSelectedListener(this);
    }

    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        // Get the selected item text
        String selectedOption = (String) parent.getItemAtPosition(position);

        // Display the selected option name (optional using TextView)
        if (selectedOptionTextView != null) {
            selectedOptionTextView.setText("Selected Option: " + selectedOption);
        } else {
            // Handle selection without a TextView, e.g., using Toast messages
        }
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {
        // Handle case where no item is selected (optional)
    }
}
ChatGPT
***alert ***
<LinearLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <Button
        android:id="@+id/show_alert_dialog_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Show Alert Dialog" />
</LinearLayout>
public class MainActivity extends AppCompatActivity {

    private Button showAlertDialogButton;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        showAlertDialogButton = findViewById(R.id.show_alert_dialog_button);  // Assuming you have a button

        showAlertDialogButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                showAlertDialog();  // Call method to display the dialog
            }
        });
    }

    private void showAlertDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        builder.setTitle("Alert!")
                .setMessage("This is an alert dialog.")
                .setPositiveButton("OK", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        // Handle positive button click (optional)
                    }
                })
                .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        // Handle negative button click (optional)
                    }
                })
                .create()
                .show();
    }
}
ChatGPT
******************14. Write a program for demonstrating Option menu along with event handler. ****************
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/menu_settings"
        android:title="Settings"
        android:icon="@drawable/ic_settings"
        android:showAsAction="ifRoom" />
    <item
        android:id="@+id/menu_about"
        android:title="About"
        android:icon="@drawable/ic_info"
        android:showAsAction="ifRoom" />
</menu>
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.menu, menu);  // Replace 'menu' with your Menu object
}
public class MainActivity extends AppCompatActivity {

    // ... other code

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        MenuInflater inflater = getMenuInflater();
        inflater.inflate(R.menu.menu, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle item selection
        int id = item.getItemId();
        if (id == R.id.menu_settings) {
            // Handle "Settings" selection (e.g., open settings activity)
            return true;
        } else if (id == R.id.menu_about) {
            // Handle "About" selection (e.g., display dialog)
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
ChatGPT
*****COntextoptionSelected***
<menu xmlns:android="http://schemas.android.com/apk/res/android">
    <item
        android:id="@+id/context_menu_edit"
        android:title="Edit"
        android:icon="@drawable/ic_edit" />
    <item
        android:id="@+id/context_menu_share"
        android:title="Share"
        android:icon="@drawable/ic_share" />
</menu>
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    // Register context menu for a specific view (e.g., TextView)
    registerForContextMenu(findViewById(R.id.text_view_for_context_menu));
}

@Override
public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
    super.onCreateContextMenu(menu, v, menuInfo);
    MenuInflater inflater = getMenuInflater();
    inflater.inflate(R.menu.context_menu, menu);
}
public class MainActivity extends AppCompatActivity {

    // ... other code

    @Override
    public boolean onContextItemSelected(MenuItem item) {
        AdapterView.Adapter adapter = null;  // Optional for list view context menus

        // Get selected view and its position (optional for ListView)
        View view = ((ContextMenuInfo) item.getMenuInfo()).targetView;
        int position = (adapter != null) ? adapter.getPosition(view) : -1;

        int id = item.getItemId();
        if (id == R.id.context_menu_edit) {
            // Handle "Edit" selection (e.g., open edit activity)
            return true;
        } else if (id == R.id.context_menu_share) {
            // Handle "Share" selection (e.g., share content)
            return true;
        }
        return super.onContextItemSelected(item);
    }
}
ChatGPT
****POPUPMENU******
<?xml version="1.0" encoding="utf-8"?> 
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity"> 

	<Button
		android:id="@+id/clickBtn"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:background="#0F9D58"
		android:text="Click Me"
		android:textColor="#ffffff"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintLeft_toLeftOf="parent"
		app:layout_constraintRight_toRightOf="parent"
		app:layout_constraintTop_toTopOf="parent" /> 
</androidx.constraintlayout.widget.ConstraintLayout>
<resources> 
	<color name="colorPrimary">#0F9D58</color> 
	<color name="colorPrimaryDark">#16E37F</color> 
	<color name="colorAccent">#03DAC5</color> 
</resources>
app > res > values > colors.xml

popup_menu file inside that menu resource directory. Go to app > res > menu > right-click > New > Menu Resource File and create a menu resource file and name it popup_menu. In the popup_menu file, we will add menu items. Below is the code snippet for the popup_menu.xml file.<?xml version="1.0" encoding="utf-8"?> 
<menu xmlns:android="http://schemas.android.com/apk/res/android"> 
	<item
		android:id="@+id/java"
		android:title="Java" /> 

	<item
		android:id="@+id/kotlin"
		android:title="Kotlin" /> 

	<item
		android:id="@+id/android"
		android:title="Android" /> 

	<item
		android:id="@+id/react_native"
		android:title="React Native" /> 
</menu>
import androidx.appcompat.app.AppCompatActivity; 
import android.os.Bundle; 
import android.view.MenuItem; 
import android.view.View; 
import android.widget.Button; 
import android.widget.PopupMenu; 
import android.widget.Toast; 

public class MainActivity extends AppCompatActivity { 
	Button button; 

	@Override
	protected void onCreate(Bundle savedInstanceState) { 
		super.onCreate(savedInstanceState); 
		setContentView(R.layout.activity_main); 

		// Referencing and Initializing the button 
		button = (Button) findViewById(R.id.clickBtn); 
		
		// Setting onClick behavior to the button 
		button.setOnClickListener(new View.OnClickListener() { 
			@Override
			public void onClick(View view) { 
				// Initializing the popup menu and giving the reference as current context 
				PopupMenu popupMenu = new PopupMenu(MainActivity.this, button); 
				
				// Inflating popup menu from popup_menu.xml file 
				popupMenu.getMenuInflater().inflate(R.menu.popup_menu, popupMenu.getMenu()); 
				popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() { 
					@Override
					public boolean onMenuItemClick(MenuItem menuItem) { 
						// Toast message on menu item clicked 
						Toast.makeText(MainActivity.this, "You Clicked " + menuItem.getTitle(), Toast.LENGTH_SHORT).show(); 
						return true; 
					} 
				}); 
				// Showing the popup menu 
				popupMenu.show(); 
			} 
		}); 
	} 
}
ChatGPT
21. Write a program for storing the data into file.
public class MainActivity extends AppCompatActivity {

    private static final String FILENAME = "myfile.txt";  // Replace with your desired filename

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Button click listener to write data to file (example)
        findViewById(R.id.save_data_button).setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String dataToSave = "This is some data to save";  // Replace with your actual data

                try {
                    FileOutputStream fos = openFileOutput(FILENAME, Context.MODE_PRIVATE);
                    fos.write(dataToSave.getBytes());
                    fos.close();
                    Toast.makeText(MainActivity.this, "Data saved successfully!", Toast.LENGTH_SHORT).show();
                } catch (IOException e) {
                    e.printStackTrace();
                    Toast.makeText(MainActivity.this, "Error saving data!", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }
}
ChatGPT
****INTERNAL STORAGE***
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	tools:context=".MainActivity">

	<TextView
		android:id="@+id/textView2"
		android:layout_width="337dp"
		android:layout_height="28dp"
		android:text=" File Content "
		android:textAlignment="center"
		android:textColor="#000"
		android:textSize="24sp"
		android:textStyle="bold"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintLeft_toLeftOf="parent"
		app:layout_constraintRight_toRightOf="parent"
		app:layout_constraintTop_toTopOf="parent"
		app:layout_constraintVertical_bias="0.52" />

	<Button
		android:id="@+id/write_button"
		android:layout_width="wrap_content"
		android:layout_height="48dp"
		android:layout_marginStart="160dp"
		android:layout_marginEnd="159dp"
		android:layout_marginBottom="16dp"
		android:text="Write"
		app:layout_constraintBottom_toTopOf="@+id/read_button"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintHorizontal_bias="0.0"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toTopOf="parent"
		app:layout_constraintVertical_bias="0.904" />

	<Button
		android:id="@+id/read_button"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_marginStart="160dp"
		android:layout_marginEnd="158dp"
		android:layout_marginBottom="48dp"
		android:text="Read"
		app:layout_constraintBottom_toTopOf="@+id/textView2"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintHorizontal_bias="0.0"
		app:layout_constraintStart_toStartOf="parent" />

	<EditText
		android:id="@+id/userInput"
		android:layout_width="319dp"
		android:layout_height="50dp"
		android:layout_marginStart="46dp"
		android:layout_marginTop="91dp"
		android:layout_marginEnd="46dp"
		android:ems="10"
		android:inputType="textPersonName"
		android:text="Name"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toTopOf="parent" />

	<TextView
		android:id="@+id/content"
		android:layout_width="332dp"
		android:layout_height="306dp"
		android:layout_marginStart="33dp"
		android:layout_marginTop="21dp"
		android:layout_marginEnd="33dp"
		android:layout_marginBottom="6dp"
		android:text=""
		android:textAlignment="center"
		android:textColor="#000"
		app:layout_constraintBottom_toBottomOf="parent"
		app:layout_constraintEnd_toEndOf="parent"
		app:layout_constraintHorizontal_bias="0.461"
		app:layout_constraintStart_toStartOf="parent"
		app:layout_constraintTop_toBottomOf="@+id/textView2"
		app:layout_constraintVertical_bias="0.0" />

</androidx.constraintlayout.widget.ConstraintLayout>


can be found in Device File Explorer > data > data > application_package > files import android.content.Context;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

	// declare the variables
	Button read, write;
	EditText userInput;
	TextView fileContent;

	private String filename = "demoFile.txt";

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);

		read = findViewById(R.id.read_button);
		write = findViewById(R.id.write_button);
		userInput = findViewById(R.id.userInput);
		fileContent = findViewById(R.id.content);

		read.setOnClickListener(this);
		write.setOnClickListener(this);
	}

	public void printMessage(String m) {
		Toast.makeText(this, m, Toast.LENGTH_LONG).show();
	}

	@Override
	public void onClick(View view) {
		Button b = (Button) view;

		// get the button text : in out case either read or
		// write depending on the button pressed.
		String b_text = b.getText().toString();

		switch (b_text.toLowerCase()) {
			case "write": {
				writeData();
				break;
			}
			case "read": {
				readData();
				break;
			}
		}
	}

	private void writeData() {

		try {
			FileOutputStream fos = openFileOutput(filename, Context.MODE_PRIVATE);
			String data = userInput.getText().toString();
			fos.write(data.getBytes());
			fos.flush();
			fos.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		userInput.setText("");
		printMessage("writing to file " + filename + "completed...");
	}

	private void readData() {
		try {
			FileInputStream fin = openFileInput(filename);
			int a;
			StringBuilder temp = new StringBuilder();
			while ((a = fin.read()) != -1) {
				temp.append((char) a);
			}

			// setting text from the file.
			fileContent.setText(temp.toString());
			fin.close();
		} catch (IOException e) {
			e.printStackTrace();
		}
		printMessage("reading to file " + filename + " completed..");
	}
}
ChatGPT
***progrss bar****
<?xml version="1.0" encoding="utf-8"?> 
<LinearLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:orientation="vertical"
	android:gravity="center_horizontal"
	tools:context=".MainActivity"> 

	<androidx.cardview.widget.CardView
		android:layout_width="300dp"
		android:layout_height="400dp"
		android:backgroundTint="#ECFAF5"
		app:cardElevation="2dp"
		android:layout_marginTop="40dp"
		app:cardCornerRadius="25dp" > 

		<TextView
			android:layout_width="wrap_content"
			android:layout_height="wrap_content"
			android:text="Progress Bar"
			android:textSize="30sp"
			android:textStyle="bold"
			android:textColor="@color/black"
			android:layout_gravity="center_horizontal"
			android:layout_marginTop="20dp" /> 

		<TextView
			android:id="@+id/txtper"
			android:layout_width="wrap_content"
			android:layout_height="wrap_content"
			android:text="0%"
			android:textStyle="bold"
			android:layout_gravity="center_horizontal"
			android:layout_marginTop="240dp"
			android:textSize="16dp"/> 

		<ProgressBar
			android:id="@+id/Prog"
			android:layout_marginTop="140dp"
			android:layout_width="230dp"
			android:layout_height="230dp"
			android:indeterminateOnly="false"
			tools:progress="1"
			android:layout_gravity="center_horizontal"
			android:layout_marginRight="10dp"
			android:progressDrawable="@drawable/circle"
			android:progress="75"> 
		</ProgressBar> 
		
	</androidx.cardview.widget.CardView> 

	<EditText
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:id="@+id/edtNumb"
		android:textColorHint="#A5A5A5"
		android:hint="Enter Number:"
		android:textSize="15sp"
		android:inputType="number"
		android:layout_marginTop="20dp"
		android:maxLength="2"
		android:maxLines="1"
		android:padding="10dp"
		android:background="@color/white" /> 
	
	<EditText
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:id="@+id/edtTotal"
		android:textColorHint="#A5A5A5"
		android:inputType="number"
		android:maxLength="2"
		android:textSize="15sp"
		android:hint="Enter total:"
		android:maxLines="1"
		android:padding="10dp"
		android:background="@color/white" /> 

	<androidx.appcompat.widget.AppCompatButton
		android:id="@+id/btnCal"
		android:layout_width="300dp"
		android:layout_height="49dp"
		android:layout_marginTop="35dp"
		android:backgroundTint="#258344"
		android:inputType="textCapSentences"
		android:elevation="10dp"
		android:padding="10dp"
		android:text="Calculate"
		android:shadowColor="#7061D7"
		android:textColor="@color/white"
		android:textSize="17sp"
		android:textStyle="bold" /> 

</LinearLayout>
Step 3: Find the drawable in your res folder

In drawable create a drawable resource file as, circle.xml. And write the below code in it.

<?xml version="1.0" encoding="utf-8"?> 
<layer-list xmlns:android="http://schemas.android.com/apk/res/android"> 
	<item> 
		<shape
			android:shape="ring"
			android:thicknessRatio="16"
			android:useLevel="false"> 
			<solid android:color="#DDD"/> 
		</shape> 
	</item> 

	<item> 
		<shape
			android:shape="ring"
			android:thicknessRatio="16"
			android:useLevel="true"> 
			<solid android:color="#268E50"/> 
		</shape> 
	</item> 
</layer-list>
package com.shruti.gfgprogress; 

import androidx.appcompat.app.AppCompatActivity; 

import android.os.Bundle; 
import android.view.View; 
import android.widget.Button; 
import android.widget.EditText; 
import android.widget.ProgressBar; 
import android.widget.TextView; 

public class MainActivity extends AppCompatActivity { 
	
	EditText edtTotal; 
	EditText edtNumb; 
	Button btnCal; 
	TextView txtper; 
	ProgressBar Prog; 
	
	@Override
	protected void onCreate(Bundle savedInstanceState) { 
		super.onCreate(savedInstanceState); 
		setContentView(R.layout.activity_main); 

		edtTotal = findViewById(R.id.edtTotal); 
		edtNumb = findViewById(R.id.edtNumb); 
		btnCal = findViewById(R.id.btnCal); 
		txtper = findViewById(R.id.txtper); 
		Prog = findViewById(R.id.Prog); 

		btnCal.setOnClickListener(new View.OnClickListener() { 
			@Override
			public void onClick(View v) { 
				float At = Integer.parseInt(edtNumb.getText().toString()); 
				float Tl = Integer.parseInt(edtTotal.getText().toString()); 

				float percen = (At/Tl)*100; 
				txtper.setText(String.valueOf(String.format("%.2f", percen)+"%")); 
				Prog.setProgress((int) percen); 
			} 
		}); 

	} 
}
ChatGPT
**progress bar 2 ***

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <ProgressBar
        android:id="@+id/progress_bar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:max="100"
        android:style="@style/Widget.AppCompat.ProgressBar.Horizontal" />

    <TextView
        android:id="@+id/progress_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:text="0%" />

    <Button
        android:id="@+id/start_progress_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:text="Start Progress" />

</LinearLayout>
public class MainActivity extends AppCompatActivity {

    private ProgressBar progressBar;
    private TextView progressText;
    private Button startProgressButton;

    private int progress = 0;  // Current progress value

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        progressBar = findViewById(R.id.progress_bar);
        progressText = findViewById(R.id.progress_text);
        startProgressButton = findViewById(R.id.start_progress_button);

        startProgressButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Simulate progress update (replace with your actual background task)
                new Thread(new Runnable() {
                    @Override
                    public void run() {
                        while (progress < 100) {
                            progress += 5;
                            runOnUiThread(new Runnable() {
                                @Override
                                public void run() {
                                    progressBar.setProgress(progress);
                                    progressText.setText(progress + "%");
                                }
                            });
                            try {
                                Thread.sleep(500);  // Simulate some work
                            } catch (InterruptedException e) {
                                e.printStackTrace();
                            }
                        }
                    }
                }).start();
            }
        });
    }
}
ChatGPT
**************rating bar *********
// Below is the code for MainActivity.java 
package com.example.hp.rating; 

// importing required libraries 
import android.graphics.Color; 
import android.graphics.PorterDuff; 
import android.graphics.drawable.LayerDrawable; 
import android.support.v7.app.AppCompatActivity; 
import android.os.Bundle; 
import android.view.View; 
import android.widget.RatingBar; 
import android.widget.TextView; 

public class MainActivity extends AppCompatActivity { 
RatingBar rt; 
	@Override
	protected void onCreate(Bundle savedInstanceState) { 
		super.onCreate(savedInstanceState); 
		setContentView(R.layout.activity_main); 

		//binding MainActivity.java with activity_main.xml file 
		rt = (RatingBar) findViewById(R.id.ratingBar); 

		//finding the specific RatingBar with its unique ID 
		LayerDrawable stars=(LayerDrawable)rt.getProgressDrawable(); 

	//Use for changing the color of RatingBar 
		stars.getDrawable(2).setColorFilter(Color.YELLOW, PorterDuff.Mode.SRC_ATOP); 
	} 

	public void Call(View v) 
	{ 
		// This function is called when button is clicked. 
		// Display ratings, which is required to be converted into string first. 
		TextView t = (TextView)findViewById(R.id.textView2); 
		t.setText("You Rated :"+String.valueOf(rt.getRating())); 
	} 
} 
<?xml version="1.0" encoding="utf-8"?> 
<android.support.constraint.ConstraintLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:tools="http://schemas.android.com/tools"
	xmlns:app="http://schemas.android.com/apk/res-auto"

	<!-- Cover the entire width of the screen -->
	android:layout_width="match_parent" 
	<!-- Cover the entire height of the screen -->
	android:layout_height="match_parent" 

	tools:context="com.example.hp.rating.MainActivity" 
	android:background="@color/colorPrimary"> 

	<RatingBar
		android:id="@+id/ratingBar"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_marginTop="104dp"
		android:background="@color/colorPrimary"
		app:layout_constraintLeft_toLeftOf="parent"
		app:layout_constraintRight_toRightOf="parent"
		app:layout_constraintTop_toTopOf="parent"
		tools:layout_constraintLeft_creator="1"
		tools:layout_constraintRight_creator="1"
		tools:layout_constraintTop_creator="1" /> 

	<TextView
		android:id="@+id/textView"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:text="Rate Me!!!"
		android:textColor="@android:color/background_dark"
		android:textSize="30sp"
		android:textStyle="bold|italic"
		tools:layout_editor_absoluteX="127dp"
		tools:layout_editor_absoluteY="28dp" /> 

	<TextView
		android:id="@+id/textView2"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_marginTop="148dp"
		android:textColorHint="@color/colorAccent"
		android:textSize="24sp"
		app:layout_constraintLeft_toLeftOf="parent"
		app:layout_constraintRight_toRightOf="parent"
		app:layout_constraintTop_toBottomOf="@+id/ratingBar"
		tools:layout_constraintRight_creator="1"
		tools:layout_constraintLeft_creator="1" /> 

	<Button
		android:id="@+id/button"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_marginBottom="50dp"
		android:layout_marginTop="50dp"
		android:background="@android:color/holo_red_dark"
		android:onClick="Call"
		android:text="Submit"
		android:textColor="@android:color/background_light"
		android:textStyle="bold|italic"
		app:layout_constraintBottom_toTopOf="@+id/textView2"
		app:layout_constraintLeft_toLeftOf="parent"
		app:layout_constraintRight_toRightOf="parent"
		app:layout_constraintTop_toBottomOf="@+id/ratingBar"
		tools:layout_constraintBottom_creator="1"
		tools:layout_constraintLeft_creator="1"
		tools:layout_constraintRight_creator="1"
		tools:layout_constraintTop_creator="1" /> 
</android.support.constraint.ConstraintLayout> 
Below is the code for AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?> 
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.hp.rating" > 
  
    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme" > 
        <activity android:name=".MainActivity" > 
            <intent-filter> 
                <action android:name="android.intent.action.MAIN" /> 
  
                <category android:name="android.intent.category.LAUNCHER" /> 
            </intent-filter> 
        </activity> 
    </application> 
  
</manifest> 
ChatGPT
The code you provided shows how to create a simple rating bar in Android. The MainActivity.java file contains the Java code for handling the rating bar and a button click event to display the rating. The activity_main.xml file contains the layout for the activity, including the rating bar, a text view, and a button.

To summarize, the code allows users to rate something using a rating bar and displays the selected rating when a button is clicked. If you have any specific questions or need further

rating bar gem
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <RatingBar
        android:id="@+id/rating_bar"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:numStars="5"
        android:stepSize="0.1"  // Optional for decimal rating (adjust as needed) />

    <TextView
        android:id="@+id/rating_value_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:text="Current Rating: 0.0" />

</LinearLayout>
public class MainActivity extends AppCompatActivity {

    private RatingBar ratingBar;
    private TextView ratingValueText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        ratingBar = findViewById(R.id.rating_bar);
        ratingValueText = findViewById(R.id.rating_value_text);

        // Set onRatingBarChangeListener to update rating value on selection change
        ratingBar.setOnRatingBarChangeListener(new RatingBar.OnRatingBarChangeListener() {
            @Override
            public void onRatingChanged(RatingBar ratingBar, float rating, boolean fromUser) {
                ratingValueText.setText("Current Rating: " + String.format("%.1f", rating));  // Format to one decimal place
            }
        });
    }
}
ChatGPT
**********25. Write a program for demonstrating seek bar along with event handler. 
*<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <SeekBar
        android:id="@+id/seek_bar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:max="100" />  <TextView
        android:id="@+id/progress_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:text="Progress: 0" />

</LinearLayout>
public class MainActivity extends AppCompatActivity {

    private SeekBar seekBar;
    private TextView progressText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        seekBar = findViewById(R.id.seek_bar);
        progressText = findViewById(R.id.progress_text);

        // Set onSeekBarChangeListener to update progress text on seek bar changes
        seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {

            @Override
            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
                progressText.setText("Progress: " + progress);
            }

            @Override
            public void onStartTrackingTouch(SeekBar seekBar) {
                // Optional: Do something when user starts touching the SeekBar (e.g., pause a media player)
            }

            @Override
            public void onStopTrackingTouch(SeekBar seekBar) {
                // Optional: Do something when user stops touching the SeekBar (e.g., resume a media player)
            }
        });
    }
}
ChatGPT
Toggle Button<RelativeLayout
	xmlns:android="http://schemas.android.com/apk/res/android"
	xmlns:app="http://schemas.android.com/apk/res-auto"
	xmlns:tools="http://schemas.android.com/tools"
	android:layout_width="match_parent"
	android:layout_height="match_parent"
	android:padding="16dp"
	android:background="@color/white"
	tools:context=".MainActivity"> 

	<ToggleButton
		android:id="@+id/toggleButton"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_centerHorizontal="true"
		android:layout_centerVertical="true"
		android:onClick="onToggleClick"
		/> 
	<TextView
		android:id="@+id/textView"
		android:layout_width="wrap_content"
		android:layout_height="wrap_content"
		android:layout_marginBottom="100dp"
		android:layout_centerVertical="true"
		android:layout_centerHorizontal="true"
		android:layout_above="@+id/toggleButton"
		android:textStyle="bold"
		android:textColor="@color/black"/> 
</RelativeLayout> 


import androidx.appcompat.app.AppCompatActivity; 
import android.os.Bundle; 
import android.view.View; 
import android.widget.TextView; 
import android.widget.ToggleButton; 

public class MainActivity 
	extends AppCompatActivity { 

	ToggleButton togglebutton; 
	TextView textview; 
	@Override
	protected void onCreate( 
		Bundle savedInstanceState) 
	{ 
		super.onCreate(savedInstanceState); 
		setContentView(R.layout.activity_main); 

		togglebutton 
			= (ToggleButton)findViewById( 
				R.id.toggleButton); 

		textview 
			= (TextView)findViewById( 
				R.id.textView); 
	} 

	public void onToggleClick(View view) 
	{ 
		if (togglebutton.isChecked()) { 
			textview.setText("Toggle is ON"); 
		} 
		else { 
			textview.setText("Toggle is OFF"); 
		} 
	} 
} 




ChatGPT
This code sets up a simple ToggleButton in an Android app. When the ToggleButton is clicked, it changes the text of a TextView to indicate whether the ToggleButton is on or off.

calculator 
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <EditText
        android:id="@+id/result_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:inputType="numberDecimal"
        android:text="0"
        android:textSize="32sp" />

    <GridLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:columnCount="4">

        <Button
            android:id="@+id/button_7"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_columnWeight="1"
            android:text="7"
            android:textSize="24sp" />

        <Button
            android:id="@+id/button_8"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_columnWeight="1"
            android:text="8"
            android:textSize="24sp" />

        <Button
            android:id="@+id/button_9"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_columnWeight="1"
            android:text="9"
            android:textSize="24sp" />

        <Button
            android:id="@+id/button_divide"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_columnWeight="1"
            android:text="/"
            android:textSize="24sp" />

        </GridLayout>

</LinearLayout>
public class CalculatorActivity extends AppCompatActivity implements View.OnClickListener {

    private EditText resultText;
    private double num1 = 0;  // First operand
    private char operator;  // Mathematical operator

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_calculator);

        resultText = findViewById(R.id.result_text);

        // Find all buttons by their IDs and set click listeners using a loop (optional for cleaner code)
        findViewById(R.id.button_7).setOnClickListener(this);
        findViewById(R.id.button_8).setOnClickListener(this);
        // ... (similar for other buttons)

        // Handlers for other buttons (e.g., decimal, clear, equals) can be implemented similarly
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.button_7:
                appendNumber("7");
                break;
            case R.id.button_8:
                appendNumber("8");
                break;
            // ... (similar cases for other number buttons)
            case R.id.button_divide:
                operator = '/';
                setNum1();  // Store first number before operator
                break;
            // ... (similar cases for other operator buttons)
            case R.id.button_equals:
                calculateResult();
                break;
            // ... (similar case for clear button to reset calculator)
        }
    }

    private void appendNumber(String number) {
        String currentText = resultText.getText().toString();
        if (currentText.equals("0")) {
            currentText = "";
        }
        resultText.setText(currentText + number);
    }

    private void setNum1() {
        try {
            num1 = Double.parseDouble(resultText.getText().toString());
            resultText.setText("");  // Clear display for second operand
        } catch (NumberFormatException e) {
            // Handle potential exception for invalid input (optional)
            e.printStackTrace();
        }
    }

    private void calculateResult() {
        if (operator != '\0') {  // Check if an operator is set
            double
ChatGPT





